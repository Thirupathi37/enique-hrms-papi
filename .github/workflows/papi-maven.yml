# This is a basic workflow to help you get started with Actions

name: CloudHub deployment of papi

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ step2 ]
  pull_request:
    branches: [ step2 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Add repo credentials
        uses: s4u/maven-settings-action@v2.4.0
        with:
          servers: |
            [{
             "id": "anypoint-exchange-v2",
             "username": "${{ secrets.PLATFORM_USERNAME }}",
             "password": "${{ secrets.PLATFORM_PASSWORD }}"
            }]
            
      - name: Print effective-settings (optional)
        run: mvn help:effective-settings
    
      - name: Build with Maven
        run: mvn -B package --file pom.xml   
        
      - name: Stamp artifact file name with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2
      - name: Upload artifact 
        uses: actions/upload-artifact@master
        with:
            name: artifacts
            path: target/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:    
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Sandbox
      env:
        PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
        PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -DPLATFORM_USERNAME="$PLATFORM_USERNAME" \
         -DPLATFORM_PASSWORD="$PLATFORM_PASSWORD" \

